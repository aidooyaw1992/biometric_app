apply plugin: 'com.android.application'


android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.miaxis.demo.sm92m"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode getSelfDefinedVersion("code:1.1.1")
        versionName getSelfDefinedVersion("name:1.1.1")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }


    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def day = new Date().format("YYYYMMdd", TimeZone.getTimeZone("UTC"))
            def version = project.android.defaultConfig.versionName
            outputFileName = "${rootProject.name}-${version}.${day}.apk"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }


    buildFeatures {
        viewBinding true
    }
}


static def getSelfDefinedVersion(version) {
    String versionName = version.split(":")[1]
    int main = versionName.split("\\.")[0] as Integer
    int sub = versionName.split("\\.")[1] as Integer
    int min = versionName.split("\\.")[2] as Integer

    def commitTimes
    try {
        Process process = "git rev-list --count HEAD".execute()
        process.waitFor()
        commitTimes = process.getText() as Integer
    } catch (Exception ignored) {
        commitTimes = 37
    }

    if (version.startsWith("code")) {
        main * 100000 + sub * 10000 + min * 1000 + commitTimes
    } else if (version.startsWith("name")) {
        "$main.$sub.$min.$commitTimes"
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation files('libs\\telpo_sdk_220217.jar')
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.cardview:cardview:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    // Network Requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"
    implementation 'com.localebro:okhttpprofiler:1.0.8'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'

//    implementation "androidx.room:room-runtime:2.6.0"
//    annotationProcessor "androidx.room:room-compiler:2.6.0"

    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'


    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation "com.facebook.shimmer:shimmer:0.5.0"

    implementation 'com.google.dagger:dagger:2.48'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.48'


    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.3.1'

    def room_version = "2.6.0"
    implementation "androidx.room:room-runtime:2.0.0"
    annotationProcessor "androidx.room:room-compiler:2.0.0"
    implementation "androidx.room:room-rxjava2:2.0.0"


    def work_version = "2.4.0"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
}